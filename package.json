{
  "name": "visual-alias",
  "displayName": "Visual Alias",
  "description": "Display alternative text for certain words or patterns, without changing the original text.",
  "version": "0.1.1",
  "publisher": "chenjing-bu",
  "repository": "https://github.com/abccsss/visual-alias",
  "engines": {
    "vscode": "^1.84.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "Visual Alias",
      "properties": {
        "visualAlias.patterns": {
          "type": "array",
          "description": "A list of pattern groups that can be applied to different languages.",
          "items": {
            "type": "object",
            "properties": {
              "language": {
                "anyOf": [
                  {
                    "type": "string",
                    "description": "The language identifier. Use '*' to match all languages.",
                    "markdownDescription": "The language identifier. Use `*` to match all languages."
                  },
                  {
                    "type": "array",
                    "description": "A list of language identifiers.",
                    "items": {
                      "type": "string"
                    }
                  }
                ]
              },
              "defaultPrefix": {
                "type": "string",
                "description": "A regular expression pattern that all patterns in this group will be prefixed with. For example, '(?<=...)' or '(?<!...)' can be used to match text before the main pattern.",
                "markdownDescription": "A regular expression pattern that all patterns in this group will be prefixed with. For example, `(?<=...)` or `(?<!...)` can be used to match text before the main pattern."
              },
              "defaultSuffix": {
                "type": "string",
                "description": "A regular expression pattern that all patterns in this group will be suffixed with. For example, this can be '\\b' (word boundary) and '' (non-letter).",
                "markdownDescription": "A regular expression pattern that all patterns in this group will be suffixed with. For example, this can be `\\b` (word boundary) and `` (non-letter)."
              },
              "defaultStyle": {
                "type": "object",
                "properties": {
                  "backgroundColor": {
                    "type": "string",
                    "description": "The background color of the replacement text."
                  },
                  "border": {
                    "type": "string",
                    "description": "The CSS border property of the replacement text, for example '1px solid red'.",
                    "markdownDescription": "The CSS `border` property of the replacement text, for example `1px solid red`."
                  },
                  "color": {
                    "type": "string",
                    "description": "The foreground color of the replacement text."
                  },
                  "fontFamily": {
                    "type": "string",
                    "description": "The CSS font-family property of the replacement text.",
                    "markdownDescription": "The CSS `font-family` property of the replacement text."
                  },
                  "fontSize": {
                    "type": "string",
                    "description": "The CSS font-size property of the replacement text.",
                    "markdownDescription": "The CSS `font-size` property of the replacement text."
                  },
                  "fontStyle": {
                    "type": "string",
                    "description": "The CSS font-style property of the replacement text.",
                    "markdownDescription": "The CSS `font-style` property of the replacement text."
                  },
                  "fontWeight": {
                    "type": "string",
                    "description": "The CSS font-weight property of the replacement text.",
                    "markdownDescription": "The CSS `font-weight` property of the replacement text."
                  },
                  "textDecoration": {
                    "type": "string",
                    "description": "The CSS text-decoration property of the replacement text.",
                    "markdownDescription": "The CSS `text-decoration` property of the replacement text."
                  },
                  "css": {
                    "type": "string",
                    "description": "Additional CSS styles to apply to the replacement text."
                  },
                  "light": {
                    "type": "object",
                    "description": "The style of the replacement text in light themes.",
                    "properties": {
                      "backgroundColor": {
                        "type": "string",
                        "description": "The background color of the replacement text."
                      },
                      "border": {
                        "type": "string",
                        "description": "The CSS border property of the replacement text, for example '1px solid red'.",
                        "markdownDescription": "The CSS `border` property of the replacement text, for example `1px solid red`."
                      },
                      "color": {
                        "type": "string",
                        "description": "The foreground color of the replacement text."
                      },
                      "fontFamily": {
                        "type": "string",
                        "description": "The CSS font-family property of the replacement text.",
                        "markdownDescription": "The CSS `font-family` property of the replacement text."
                      },
                      "fontSize": {
                        "type": "string",
                        "description": "The CSS font-size property of the replacement text.",
                        "markdownDescription": "The CSS `font-size` property of the replacement text."
                      },
                      "fontStyle": {
                        "type": "string",
                        "description": "The CSS font-style property of the replacement text.",
                        "markdownDescription": "The CSS `font-style` property of the replacement text."
                      },
                      "fontWeight": {
                        "type": "string",
                        "description": "The CSS font-weight property of the replacement text.",
                        "markdownDescription": "The CSS `font-weight` property of the replacement text."
                      },
                      "textDecoration": {
                        "type": "string",
                        "description": "The CSS text-decoration property of the replacement text.",
                        "markdownDescription": "The CSS `text-decoration` property of the replacement text."
                      },
                      "css": {
                        "type": "string",
                        "description": "Additional CSS styles to apply to the replacement text."
                      }
                    }
                  },
                  "dark": {
                    "type": "object",
                    "description": "The style of the replacement text in dark themes.",
                    "properties": {
                      "backgroundColor": {
                        "type": "string",
                        "description": "The background color of the replacement text."
                      },
                      "border": {
                        "type": "string",
                        "description": "The CSS border property of the replacement text, for example '1px solid red'.",
                        "markdownDescription": "The CSS `border` property of the replacement text, for example `1px solid red`."
                      },
                      "color": {
                        "type": "string",
                        "description": "The foreground color of the replacement text."
                      },
                      "fontFamily": {
                        "type": "string",
                        "description": "The CSS font-family property of the replacement text.",
                        "markdownDescription": "The CSS `font-family` property of the replacement text."
                      },
                      "fontSize": {
                        "type": "string",
                        "description": "The CSS font-size property of the replacement text.",
                        "markdownDescription": "The CSS `font-size` property of the replacement text."
                      },
                      "fontStyle": {
                        "type": "string",
                        "description": "The CSS font-style property of the replacement text.",
                        "markdownDescription": "The CSS `font-style` property of the replacement text."
                      },
                      "fontWeight": {
                        "type": "string",
                        "description": "The CSS font-weight property of the replacement text.",
                        "markdownDescription": "The CSS `font-weight` property of the replacement text."
                      },
                      "textDecoration": {
                        "type": "string",
                        "description": "The CSS text-decoration property of the replacement text.",
                        "markdownDescription": "The CSS `text-decoration` property of the replacement text."
                      },
                      "css": {
                        "type": "string",
                        "description": "Additional CSS styles to apply to the replacement text."
                      }
                    }
                  }
                }
              },
              "patterns": {
                "type": "array",
                "description": "A list of substitution rules to apply to the language.",
                "items": {
                  "anyOf": [
                    {
                      "type": "string",
                      "description": "A substitution rule in the form of 'pattern/replacement', where 'pattern' is a regular expression pattern and 'replacement' is the replacement text. Note that special characters in 'pattern' need to be escaped. Write '/patter/replacement' to disable the default prefix and suffix.",
                      "markdownDescription": "A substitution rule in the form of `pattern/replacement`, where `pattern` is a regular expression pattern and `replacement` is the replacement text. Note that special characters in `pattern` need to be escaped. Write `/patter/replacement` to disable the default prefix and suffix."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "pattern": {
                          "type": "string",
                          "description": "A regular expression pattern. Note that special characters need to be escaped."
                        },
                        "replacement": {
                          "type": "string",
                          "description": "The displayed replacement text."
                        },
                        "useDefaultPrefixAndSuffix": {
                          "type": "boolean",
                          "description": "Whether to use the default prefix and suffix for this pattern."
                        },
                        "useDefaultStyle": {
                          "type": "boolean",
                          "description": "Whether to use the default style for this pattern."
                        },
                        "backgroundColor": {
                          "type": "string",
                          "description": "The background color of the replacement text."
                        },
                        "border": {
                          "type": "string",
                          "description": "The CSS border property of the replacement text, for example '1px solid red'.",
                          "markdownDescription": "The CSS `border` property of the replacement text, for example `1px solid red`."
                        },
                        "color": {
                          "type": "string",
                          "description": "The foreground color of the replacement text."
                        },
                        "fontFamily": {
                          "type": "string",
                          "description": "The CSS font-family property of the replacement text.",
                          "markdownDescription": "The CSS `font-family` property of the replacement text."
                        },
                        "fontSize": {
                          "type": "string",
                          "description": "The CSS font-size property of the replacement text.",
                          "markdownDescription": "The CSS `font-size` property of the replacement text."
                        },
                        "fontStyle": {
                          "type": "string",
                          "description": "The CSS font-style property of the replacement text.",
                          "markdownDescription": "The CSS `font-style` property of the replacement text."
                        },
                        "fontWeight": {
                          "type": "string",
                          "description": "The CSS font-weight property of the replacement text.",
                          "markdownDescription": "The CSS `font-weight` property of the replacement text."
                        },
                        "textDecoration": {
                          "type": "string",
                          "description": "The CSS text-decoration property of the replacement text.",
                          "markdownDescription": "The CSS `text-decoration` property of the replacement text."
                        },
                        "css": {
                          "type": "string",
                          "description": "Additional CSS styles to apply to the replacement text."
                        },
                        "light": {
                          "type": "object",
                          "description": "The style of the replacement text in light themes.",
                          "properties": {
                            "backgroundColor": {
                              "type": "string",
                              "description": "The background color of the replacement text."
                            },
                            "border": {
                              "type": "string",
                              "description": "The CSS border property of the replacement text, for example '1px solid red'.",
                              "markdownDescription": "The CSS `border` property of the replacement text, for example `1px solid red`."
                            },
                            "color": {
                              "type": "string",
                              "description": "The foreground color of the replacement text."
                            },
                            "fontFamily": {
                              "type": "string",
                              "description": "The CSS font-family property of the replacement text.",
                              "markdownDescription": "The CSS `font-family` property of the replacement text."
                            },
                            "fontSize": {
                              "type": "string",
                              "description": "The CSS font-size property of the replacement text.",
                              "markdownDescription": "The CSS `font-size` property of the replacement text."
                            },
                            "fontStyle": {
                              "type": "string",
                              "description": "The CSS font-style property of the replacement text.",
                              "markdownDescription": "The CSS `font-style` property of the replacement text."
                            },
                            "fontWeight": {
                              "type": "string",
                              "description": "The CSS font-weight property of the replacement text.",
                              "markdownDescription": "The CSS `font-weight` property of the replacement text."
                            },
                            "textDecoration": {
                              "type": "string",
                              "description": "The CSS text-decoration property of the replacement text.",
                              "markdownDescription": "The CSS `text-decoration` property of the replacement text."
                            },
                            "css": {
                              "type": "string",
                              "description": "Additional CSS styles to apply to the replacement text."
                            }
                          }
                        },
                        "dark": {
                          "type": "object",
                          "description": "The style of the replacement text in dark themes.",
                          "properties": {
                            "backgroundColor": {
                              "type": "string",
                              "description": "The background color of the replacement text."
                            },
                            "border": {
                              "type": "string",
                              "description": "The CSS border property of the replacement text, for example '1px solid red'.",
                              "markdownDescription": "The CSS `border` property of the replacement text, for example `1px solid red`."
                            },
                            "color": {
                              "type": "string",
                              "description": "The foreground color of the replacement text."
                            },
                            "fontFamily": {
                              "type": "string",
                              "description": "The CSS font-family property of the replacement text.",
                              "markdownDescription": "The CSS `font-family` property of the replacement text."
                            },
                            "fontSize": {
                              "type": "string",
                              "description": "The CSS font-size property of the replacement text.",
                              "markdownDescription": "The CSS `font-size` property of the replacement text."
                            },
                            "fontStyle": {
                              "type": "string",
                              "description": "The CSS font-style property of the replacement text.",
                              "markdownDescription": "The CSS `font-style` property of the replacement text."
                            },
                            "fontWeight": {
                              "type": "string",
                              "description": "The CSS font-weight property of the replacement text.",
                              "markdownDescription": "The CSS `font-weight` property of the replacement text."
                            },
                            "textDecoration": {
                              "type": "string",
                              "description": "The CSS text-decoration property of the replacement text.",
                              "markdownDescription": "The CSS `text-decoration` property of the replacement text."
                            },
                            "css": {
                              "type": "string",
                              "description": "Additional CSS styles to apply to the replacement text."
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": [
            {
              "language": "latex",
              "defaultSuffix": "(?![a-zA-Z])",
              "patterns": [
                "\\\\alpha/α",
                "\\\\beta/β",
                "\\\\gamma/γ",
                "\\\\delta/δ",
                "\\\\epsilon/ϵ",
                "\\\\varepsilon/ε",
                "\\\\zeta/ζ",
                "\\\\eta/η",
                "\\\\theta/θ",
                "\\\\vartheta/ϑ",
                "\\\\iota/ι",
                "\\\\kappa/κ",
                "\\\\lambda/λ",
                "\\\\mu/μ",
                "\\\\nu/ν",
                "\\\\xi/ξ",
                "\\\\omicron/ο",
                "\\\\pi/π",
                "\\\\varpi/ϖ",
                "\\\\rho/ρ",
                "\\\\varrho/ϱ",
                "\\\\sigma/σ",
                "\\\\varsigma/ς",
                "\\\\tau/τ",
                "\\\\upsilon/υ",
                "\\\\phi/ϕ",
                "\\\\varphi/φ",
                "\\\\chi/χ",
                "\\\\psi/ψ",
                "\\\\omega/ω",
                "\\\\Gamma/Γ",
                "\\\\Delta/Δ",
                "\\\\Theta/Θ",
                "\\\\Lambda/Λ",
                "\\\\Xi/Ξ",
                "\\\\Pi/Π",
                "\\\\Sigma/Σ",
                "\\\\Upsilon/Υ",
                "\\\\Phi/Φ",
                "\\\\Psi/Ψ",
                "\\\\Omega/Ω",
                "\\\\partial/∂",
                "\\\\infty/∞",
                "\\\\ell/ℓ"
              ]
            }
          ]
        },
        "visualAlias.maxLineCount": {
          "type": "number",
          "default": 10000,
          "description": "The maximum number of lines to process. Set to 0 to disable the limit.",
          "markdownDescription": "The maximum number of lines to process. Set to `0` to disable the limit."
        },
        "visualAlias.maxLineLength": {
          "type": "number",
          "default": 1000,
          "description": "The maximum length of a line to process. Set to 0 to disable the limit.",
          "markdownDescription": "The maximum length of a line to process. Set to `0` to disable the limit."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "lint": "eslint src --ext ts"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.3",
    "@types/node": "18.x",
    "@types/vscode": "^1.84.0",
    "@typescript-eslint/eslint-plugin": "^6.9.0",
    "@typescript-eslint/parser": "^6.9.0",
    "eslint": "^8.52.0",
    "glob": "^10.3.10",
    "mocha": "^10.2.0",
    "typescript": "^5.2.2"
  },
  "dependencies": {
    "ts-debounce": "^4.0.0"
  }
}
